CaseTriggerHandler.apxc

public class CaseTriggerHandler {
    public static void handleAfterUpdate(List<Case_Request__c> newList, Map<Id, Case_Request__c> oldMap) {
        List<Case_History__c> histories = new List<Case_History__c>();

        for (Case_Request__c newCase : newList) {
            Case_Request__c oldCase = oldMap.get(newCase.Id);

            // Verifica se o status foi alterado para "Closed"
            if (newCase.Status__c == 'Closed' && oldCase.Status__c != 'Closed') {
                Boolean slaMet = false;
                
                if (newCase.Closed_Date__c != null && newCase.SLA_Deadline__c != null) {
                    slaMet = newCase.Closed_Date__c <= newCase.SLA_Deadline__c;
                }

                histories.add(new Case_History__c(
                    Case__c = newCase.Id,
                    Time_Closed__c = newCase.Closed_Date__c,
                    SLA_Met__c = slaMet
                ));
            }
        }

        if (!histories.isEmpty()) {
            insert histories;
        }
    }
}


CaseTriggerHandlerTest.apxc

@isTest
public class CaseTriggerHandlerTest {

    @isTest
    static void testSlaMet() {
        // Cria um Case com SLA para o futuro
        Case_Request__c case1 = new Case_Request__c(
            Name = 'Teste SLA Cumprido',
            Status__c = 'In Progress',
            SLA_Deadline__c = Date.today().addDays(2)
        );
        insert case1;

        // Fecha o caso hoje
        case1.Status__c = 'Closed';
        case1.Closed_Date__c = Date.today();
        case1.Resolution_Notes__c = 'Resolvido com sucesso';
        update case1;

        // Verificando se o histórico foi criado com sucesso!
        List<Case_History__c> history = [
            SELECT Id, SLA_Met__c FROM Case_History__c WHERE Case__c = :case1.Id
        ];
        System.assertEquals(1, history.size());
        System.assertEquals(true, history[0].SLA_Met__c);
    }

    @isTest
    static void testSlaNotMet() {
        // Criando um Case com SLA para ontem
        Case_Request__c case2 = new Case_Request__c(
            Name = 'Teste SLA NÃO Cumprido',
            Status__c = 'In Progress',
            SLA_Deadline__c = Date.today().addDays(-1)
        );
        insert case2;

        // Fecha o caso hoje (depois do SLA)
        case2.Status__c = 'Closed';
        case2.Closed_Date__c = Date.today();
        case2.Resolution_Notes__c = 'Resolvido com atraso';
        update case2;

        // Verifica se o histórico foi criado corretamente
        List<Case_History__c> history = [
            SELECT Id, SLA_Met__c FROM Case_History__c WHERE Case__c = :case2.Id
        ];
        System.assertEquals(1, history.size());
        System.assertEquals(false, history[0].SLA_Met__c);
    }
}

CaseTrigger.apxt

trigger CaseTrigger on Case_Request__c (after update) {
    if (Trigger.isAfter && Trigger.isUpdate) {
        CaseTriggerHandler.handleAfterUpdate(Trigger.new, Trigger.oldMap);
    }
}